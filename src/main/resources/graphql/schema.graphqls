type User {
    id: ID!
    email: String!
    role: String!
}

type CravingsLog {
    id: ID!
    timestamp: String
    notes: String
    cravingType: String
    intensity: Int
}

type Milestone {
    id: ID!
    milestoneName: String
    targetDate: String
    isAchieved: Boolean
}

type HealthBenefit {
    id: ID!
    description: String
    achievedDate: String
}

type Query {
    getUserProgress(id: ID!): User
    getUserCravings(userId: ID!): [CravingsLog]
    getUserHealthBenefits(userId: ID!): [HealthBenefit]
    me:User
}

type Mutation {
    registerUser(email: String!, password: String!, role: String!): String
    loginUser(email: String!, password: String!): String
    logCravings(userId: ID!, cravingType: String!, intensity: Int!, notes: String): CravingsLog
    updateMilestone(milestoneId: ID!, isAchieved: Boolean, targetDate: String): Milestone
}
